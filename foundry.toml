[profile.default]
solc = "0.8.27"
src = "src"
out = "out"
libs = ["dependencies"]
remappings = [
    "forge-std/=dependencies/forge-std-1.9.4/src/",
    "foundry-devops/=dependencies/foundry-devops-0.2.2/src/",
    "account-abstraction/=dependencies/eth-infinitism-account-abstraction-0.7/contracts/",
    "@openzeppelin/contracts/=dependencies/@openzeppelin-contracts-5.1.0/",
    "cyfrin-foundry-era-contracts/=dependencies/cyfrin-foundry-era-contracts-0.0.3/src/system-contracts/contracts",
]
fs_permissions = [
    { access = "read", path = "./broadcast" },
    { access = "read", path = "./reports" },
]
# Intermediate Representation (IR)
# It is an additional compilation step that routes the source code through
# an intermediate abstraction layer before generating the final bytecode.
# We need this because of 'stact too deep' compiler error.
# This comes because of the giat Transaction structure and the MemoryTransactionHelper
via_ir = true

[dependencies]
forge-std = { version = "1.9.4" }
foundry-devops = { version = "0.2.2" }
eth-infinitism-account-abstraction = { version = "0.7" }
"@openzeppelin-contracts" = { version = "5.1.0" }
cyfrin-foundry-era-contracts = { version = "0.0.3" }

[soldeer]
remappings_generate = false
remappings_regenerate = false

[fuzz]
runs = 256

[invariant]
runs = 128
depth = 128
fail_on_revert = false

[fmt]
int_types = "long"
line_length = 120
multiline_func_header = "all"
number_underscore = "thousands"
quote_style = "double"
tab_width = 4
wrap_comments = true

# See more config options https://github.com/foundry-rs/foundry/blob/master/crates/config/README.md#all-options
